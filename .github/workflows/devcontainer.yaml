name: WASudoku Images Release

on:
  push:
    tags:
      - 'dc-v*.*.*'

jobs:
  check-tag-branch:
    name: Check Tag Location
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Verify tag is on main branch
        run: git merge-base --is-ancestor ${{ github.sha }} origin/main

  release-images:
    name: Build and Release Images
    runs-on: ubuntu-latest
    needs: check-tag-branch
    strategy:
      matrix:
        image:
          - name: wasudoku-ci
            dockerfile: .github/Dockerfile
          - name: wasudoku-dev
            dockerfile: Dockerfile
    steps:
      - uses: actions/checkout@v5
      - name: Find version from tag
        run: echo "VERSION=${GITHUB_REF_NAME#dc-v}" >>"${GITHUB_ENV}"
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - uses: docker/build-push-action@v6
        with:
          context: .
          file: ./${{ matrix.image.dockerfile }}
          push: true
          tags: |
            ${{ vars.DOCKERHUB_USERNAME }}/${{ matrix.image.name }}:${{ env.VERSION }}
            ${{ vars.DOCKERHUB_USERNAME }}/${{ matrix.image.name }}:latest

  update-references:
    name: Update Image Version References
    runs-on: ubuntu-latest
    needs: release-images
    permissions:
      contents: write
    steps:
      - name: Find version from tag
        run: echo "VERSION=${GITHUB_REF_NAME#dc-v}" >>"${GITHUB_ENV}"
      - uses: actions/checkout@v5
        with:
          ref: main
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Update .devcontainer.json
        run: |
          sed -i 's|\("image": "h3nc4/wasudoku-dev\):.*"|\1:${{ env.VERSION }}"|' .devcontainer.json
      - name: Update CI image version file
        run: |
          echo "${{ env.VERSION }}" >.github/VERSION
      - name: Configure Git for commit
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
      - name: Commit and push version updates
        run: |
          git add .devcontainer.json .github/VERSION
          if ! git diff --staged --quiet; then
            git commit -m "Bump dev container and CI images to v${{ env.VERSION }} [skip ci]"
            git push
          else
            echo "Image versions are already up-to-date."
          fi
