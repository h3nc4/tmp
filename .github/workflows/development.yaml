name: WASudoku Development CI

on:
  push:
    branches:
      - '**'

jobs:
  prepare:
    name: Prepare environment
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.read_tag.outputs.tag }}
    steps:
      - uses: actions/checkout@v5
      - id: read_tag
        run: echo "tag=$(cat .github/VERSION)" >>"${GITHUB_OUTPUT}"

  lint:
    name: Lint Codebase
    runs-on: ubuntu-latest
    needs: prepare
    container:
      image: h3nc4/wasudoku-ci:${{ needs.prepare.outputs.tag }}
    steps:
      - uses: actions/checkout@v5
      - name: Get npm cache directory
        id: npm-cache-dir
        run: echo "dir=$(npm config get cache)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v4
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-
      - name: Install dependencies
        run: npm ci
      - name: Check UI and WASM formatting
        run: npm run format:check
      - name: Lint UI
        run: npm run lint
      - name: Lint Markdown
        run: npm run lint:md
      - name: Lint Shell Scripts
        run: npm run lint:sh

  wasm:
    name: Validate WASM Module
    runs-on: ubuntu-latest
    needs: prepare
    container:
      image: h3nc4/wasudoku-ci:${{ needs.prepare.outputs.tag }}
    steps:
      - uses: actions/checkout@v5
      - uses: actions/cache@v4
        with:
          path: |
            /opt/rust/.cargo/bin/
            /opt/rust/.cargo/registry/index/
            /opt/rust/.cargo/registry/cache/
            /opt/rust/.cargo/git/db/
            src/wasudoku-wasm/target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('src/wasudoku-wasm/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
      - name: Lint with Clippy
        run: npm run lint:rust
      - name: Check security advisories
        run: npm run audit:rust
      - name: Run tests
        run: npm run test:rust
      - uses: actions/upload-artifact@v5
        with:
          name: wasm-coverage
          path: coverage-wasm.xml
          retention-days: 1

  ui:
    name: Validate UI
    runs-on: ubuntu-latest
    needs: prepare
    container:
      image: h3nc4/wasudoku-ci:${{ needs.prepare.outputs.tag }}
    steps:
      - uses: actions/checkout@v5
      - name: Get npm cache directory
        id: npm-cache-dir
        run: echo "dir=$(npm config get cache)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v4
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-
      - name: Install dependencies
        run: npm ci
      - name: Check vulnerabilities
        run: npm run audit
      - name: Check types for WASM bindings
        run: npm run wasm:build:dev
      - name: Check types
        run: npm run typecheck
      - name: Run tests
        run: npm run test:ui
      - uses: actions/upload-artifact@v5
        with:
          name: ui-coverage
          path: coverage-ui.lcov
          retention-days: 1

  sonarqube:
    name: SonarQube Scan
    needs: [wasm, ui]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0 # Fetch history for SonarQube
      - uses: actions/download-artifact@v6
        with:
          name: wasm-coverage
      - uses: actions/download-artifact@v6
        with:
          name: ui-coverage
      - name: Run SonarQube analysis
        run: ./scripts/sonar.sh

  build-artifact:
    name: Build Production Artifact
    needs: [sonarqube, prepare]
    runs-on: ubuntu-latest
    container:
      image: h3nc4/wasudoku-ci:${{ needs.prepare.outputs.tag }}
    steps:
      - uses: actions/checkout@v5
      - name: Get npm cache directory
        id: npm-cache-dir
        run: echo "dir=$(npm config get cache)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v4
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-
      - name: Install dependencies
        run: npm ci
      - name: Build production bundle
        run: npm run build
      - name: Package artifact
        run: XZ_OPT=-9e tar -cJf WASudoku-dev.tar.xz -C dist .
      - uses: actions/upload-artifact@v5
        with:
          name: dev-build
          path: WASudoku-dev.tar.xz
          retention-days: 7

  build-runtime-container:
    name: Build Runtime Container
    needs: [wasm, ui]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: docker/setup-buildx-action@v3
      - name: Test Build Runtime Container
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile.runtime
          push: false
          load: true
